객체?

:특성과 기능을 가지고 있는 물리적인 존재, 추상적인 대상

특성 - 속성
기능 - 속성(메소드)

===
객체 - 속성,메소드

속성 : 객체 내부의 있는 값.
ex) aloha

메소드 : 함수 자료형 속성
coding : function(time){}

====
this

: this가 사용된 코드 영역을 포함하고(소유하고) 있는 객체
: 함수가 호출되는 시점에서 가리키는 객체
: this는 객체 자기자신을 가리킬 때
  - 매개변수의 이름과 , 객체 속성의 이름이 같은 경우 무엇이 객체의 속성임을 가리키는지 표시할 때 사용.
: this 키워드는 사용되는 4가지 패턴이 있다.

const pet = {
  name : '구름',
  eat : function(food){
    alert(this.name + '은/는' + food + '을/를 먹습니다')
  }
}

pet.eat('밥' )

===
prototype
기본 자료형에 속성과 메소드를 추가하는 키워드

[자료형].prototype.[속성명] = [값];
[자료형].prototype.[메소드명] = function(){};

====

undefined : 정의가 되지 않은 . 자료형이 정해지지 않은 상태
null : 자료형이 정해진 상태. 값은 존재하지 않음

속성자체가 존재하는지 확인 : undefined 키워드를 이용해서 확인.

객체.속성 != undefined
true : 존재하는 속성
false : 존재하지 않는 속성


속성 존재 확인하기
if(object.name != undefined)


속성 간단 검사
if(object.name)
속성 값이 false로 변환되지 않는 경우에 사용 가능
===

다중 할당 : 한 번에 여러개의 변수에 값을 할당하는 것

