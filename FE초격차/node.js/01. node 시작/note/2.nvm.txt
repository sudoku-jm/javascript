
1. nvm 설치 : https://github.com/coreybutler/nvm-windows

nvm --version
nvm ls (설치된 node.js확인)
nvm install 16.13.0 (원하는 버전 설치)

nvm ls
16.13.0
* 14.18.0 (Currently using 64-bit executable)

nvm use 16.13.0 (원하는 버전 실행)
node --version (설치한 버전 확인)

nvm uninstall 17.1.0 (원하는 버전 삭제)

2. Node.js : https://nodejs.org/ko/

3. npm 
NPM(Node Package Mnager)는 전 세계의 개발자들이 만든 다양한 기능(패키지, 모듈) 들을 관리.
node.js 환경에서 사용 할 수 있는 다양한 기능 패키지!

npm init -y (Package.json 폴더 생성)

npm install parcel-bundler -D

(node_modules 폴더, package-lock.json 설치 완료.
parcel-bundler를 사용하기위한 모듈도 함께 설치)

npm install lodash (설치)

(package.json에서 설치된 모듈 확인 가능 dependencies에 버전 등 확인가능)

node_modules 폴더 삭제해도 package.json이 남아 있으므로 다음번에 재설치 시 똑같이 설치된다. 언제든지 지워도 됨.

npm install 또는 npm i (설치) 

(절대 지우면 안됨)
package.json : 직접적 관리
package-lock.json : 자동으로 관리

=================
-D 붙이고 안붙이는 차이점?

npm install parcel-bundler -D     => devDependencies 개발용 의존성 패키지 설치. 
                                     -D ,--save-dev
                                     개발할때만 필요함.
                                     웹브라우저에서 직접적으로 동작하지 않음.

npm install lodash                => dependencies 일반 의존성 설치
                                     웹 브라우저에서 실질적으로 동작할 수 있음.

